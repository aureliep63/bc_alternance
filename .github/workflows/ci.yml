name: CI for Backend Service

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4



      # Le Dockerfile de test Selenium est à la racine.
      - name: Build Selenium test image
        run: docker build -f ./Dockerfile.selenium -t my-selenium-image .

      # Le Dockerfile du back-end est à la racine.
      - name: Build Docker image for deployment (Backend)
        run: docker build -t electricty-business-backend:latest -f ./Dockerfile .

      # --- Le reste du workflow est correct ---
      - name: Start backend service
        run: docker run -d -p 8080:8080 --name backend-service electricty-business-backend:latest



      - name: Run unit and integration tests with Maven
        run: |
          docker run --rm \
            -v $PWD:/app \
            -w /app \
            --add-host=host.docker.internal:host-gateway \
            -e JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
            -e FIREBASE_CONFIG_JSON="${{ secrets.FIREBASE_CONFIG_JSON }}" \
            -e SPRING_MAIL_HOST="${{ secrets.SPRING_MAIL_HOST }}" \
            -e SPRING_MAIL_PORT="${{ secrets.SPRING_MAIL_PORT }}" \
            -e SPRING_MAIL_USERNAME="${{ secrets.SPRING_MAIL_USERNAME }}" \
            -e SPRING_MAIL_PASSWORD="${{ secrets.SPRING_MAIL_PASSWORD }}" \
            maven:3.9.6-eclipse-temurin-21 \
            mvn clean test

      - name: Run Selenium tests with Maven
        run: |
          docker run --rm \
            -v $PWD:/app \
            -w /app \
            --add-host=host.docker.internal:host-gateway \
            -e JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
            -e FIREBASE_CONFIG_JSON="${{ secrets.FIREBASE_CONFIG_JSON }}" \
            -e SPRING_MAIL_HOST="${{ secrets.SPRING_MAIL_HOST }}" \
            -e SPRING_MAIL_PORT="${{ secrets.SPRING_MAIL_PORT }}" \
            -e SPRING_MAIL_USERNAME="${{ secrets.SPRING_MAIL_USERNAME }}" \
            -e SPRING_MAIL_PASSWORD="${{ secrets.SPRING_MAIL_PASSWORD }}" \
            my-selenium-image \
            mvn verify -Pselenium

      - name: Stop frontend and backend services
        if: always()
        run: |
          docker stop frontend-service
          docker stop backend-service